{"version":3,"sources":["components/Searchbar/Searcbar.styled.js","components/Searchbar/Searchbar.jsx","pixabayApi/pixabayApi.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/App/App.styled.js","components/App/App.jsx","index.js"],"names":["Form","SearchButton","ButtonLabel","MdSearch","SearchInput","Searchbar","state","searchImages","handleSearchChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmit","this","type","autoComplete","autoFocus","placeholder","onChange","Component","PixabayApi","searchQuery","page","a","setRequestSetting","axios","create","baseURL","headers","timeout","method","params","key","q","image_type","orientation","per_page","get","response","data","hits","getImagesParams","images","map","id","webformatURL","largeImageURL","tags","newQuery","Item","Image","ImageGalleryItem","onClick","src","alt","ThreeDots","Spinner","Loader","color","Btn","Button","List","API","Api","IDLE","PENDING","RESOLVED","ImageGallery","status","handleLoadMoreImage","incrementPage","fetchImages","nextPage","scrollDown","prevProps","_prevState","resetPage","query","length","window","scrollTo","top","document","documentElement","scrollHeight","behavior","item","Overlay","Wrapper","modalRoot","getElementById","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","addEventListener","removeEventListener","createPortal","children","Container","Header","Main","App","showModal","largeImage","handleFormSubmit","toggleModal","handlerFullSizeImage","dataset","full_size","autoClose","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.534f8fd5.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\nimport { MdSearch } from 'react-icons/md';\n\nexport const Form = styled.form`\n  display: flex;\n  width: 100%;\n  min-width: 275px;\n  background-color: var(--bs-white);\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 0 auto;\n  @media screen and (min-width: 1200px) {\n    max-width: 300px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled(MdSearch)`\n  font-size: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport {\n  SearchButton,\n  Form,\n  ButtonLabel,\n  SearchInput,\n} from './Searcbar.styled';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchImages: '',\n  };\n\n  handleSearchChange = event => {\n    this.setState({ searchImages: event.target.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { searchImages } = this.state;\n\n    if (searchImages.trim() === '') {\n      toast.error('Enter the name of the pictures or photos!');\n      this.setState({\n        searchImages: '',\n      });\n      return;\n    }\n\n    this.props.onSubmit(searchImages);\n    this.setState({\n      searchImages: '',\n    });\n  };\n\n  render() {\n    const { searchImages } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <SearchButton type=\"submit\">\n          <ButtonLabel />\n        </SearchButton>\n\n        <SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchImages}\n          onChange={this.handleSearchChange}\n        />\n      </Form>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nexport default class PixabayApi {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchImages() {\n    const setRequestSetting = axios.create({\n      baseURL: 'https://pixabay.com/api/',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      timeout: 1000,\n      method: 'GET',\n      params: {\n        key: '23790821-6777a11e2db191613ff9bf1d2',\n        q: this.searchQuery,\n        page: this.page,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        per_page: 16,\n      },\n    });\n\n    const response = await setRequestSetting.get();\n    const data = await response.data;\n    const hits = await data.hits;\n    return this.getImagesParams(hits);\n  }\n\n  getImagesParams(images) {\n    return images.map(({ id, webformatURL, largeImageURL, tags }) => {\n      return {\n        id,\n        webformatURL,\n        largeImageURL,\n        tags,\n      };\n    });\n  }\n\n  incrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Item = styled.li`\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Item, Image } from './ImageGalleryItem.styled';\n\nexport default function ImageGalleryItem({ params, onClick }) {\n  const { id, webformatURL, largeImageURL, tags } = params;\n  return (\n    <Item>\n      <Image\n        id={id}\n        src={webformatURL}\n        alt={tags}\n        data-full_size={largeImageURL}\n        onClick={onClick}\n      />\n    </Item>\n  );\n}\nImageGalleryItem.propTypes = {\n  params: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n    tags: PropTypes.string.isRequired,\n  }),\n  onClick: PropTypes.func.isRequired,\n};\n","import Spinner from 'react-loader-spinner';\nimport styled from '@emotion/styled/macro';\n\nconst ThreeDots = styled(Spinner)`\n  margin: 0 auto;\n  width: 80px;\n  height: 80px;\n`;\n\nexport default function Loader() {\n  return <ThreeDots type=\"ThreeDots\" color=\"#3f51b5\" />;\n}\n","import styled from '@emotion/styled/macro';\n\nexport const Btn = styled.button`\n  margin: 0 auto 10px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  max-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './Button.styled';\n\nexport default function Button({ onClick }) {\n  return (\n    <Btn type=\"button\" onClick={onClick}>\n      Load more\n    </Btn>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  grid-gap: 16px;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport Api from 'pixabayApi';\nimport ImageGalleryItem from 'components/ImageGalleryItem';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\nimport { List } from './ImageGallery.styled';\n\nconst API = new Api();\n\nconst status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n};\nconst { IDLE, PENDING, RESOLVED } = status;\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    status: PENDING,\n  };\n\n  async componentDidMount() {\n    try {\n      const images = await API.fetchImages();\n      this.setState({ images, status: IDLE });\n    } catch {\n      toast.error('oops something went wrong');\n    }\n  }\n\n  async componentDidUpdate(prevProps, _prevState) {\n    const { searchImages } = this.props;\n\n    if (prevProps.searchImages !== searchImages) {\n      this.setState({\n        status: PENDING,\n      });\n\n      try {\n        API.resetPage();\n        API.query = searchImages;\n        const images = await API.fetchImages();\n\n        if (!images.length) {\n          toast.error('images not found');\n        }\n\n        this.setState({\n          images,\n          status: RESOLVED,\n        });\n      } catch {\n        toast.error('oops something went wrong');\n      }\n    }\n  }\n\n  handleLoadMoreImage = async () => {\n    API.incrementPage();\n    const nextPage = await API.fetchImages();\n    this.setState(({ images }) => ({ images: [...images, ...nextPage] }));\n    this.scrollDown();\n  };\n\n  scrollDown() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  render() {\n    const { images, status } = this.state;\n\n    if (status === IDLE) {\n      return (\n        <>\n          <List>\n            {images.map(item => (\n              <ImageGalleryItem\n                key={item.id}\n                params={item}\n                onClick={this.props.onClick}\n              />\n            ))}\n          </List>\n          {images.length > 0 && <Button onClick={this.handleLoadMoreImage} />}\n        </>\n      );\n    }\n\n    if (status === PENDING) {\n      return <Loader />;\n    }\n\n    if (status === RESOLVED) {\n      return (\n        <>\n          <List>\n            {images.map(item => (\n              <ImageGalleryItem\n                key={item.id}\n                params={item}\n                onClick={this.props.onClick}\n              />\n            ))}\n          </List>\n          {images.length > 0 && <Button onClick={this.handleLoadMoreImage} />}\n        </>\n      );\n    }\n  }\n}\nImageGallery.propTypes = {\n  searchImages: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Overlay = styled.div`\n  z-index: 1200;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const Wrapper = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { Overlay, Wrapper } from './Modal.styled';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <Overlay onClick={this.handleBackdropClick}>\n        <Wrapper>{this.props.children}</Wrapper>\n      </Overlay>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 10px;\n  padding-right: 10px;\n  @media screen and (min-width: 1200px) {\n    width: 1200px;\n  }\n`;\n\nexport const Header = styled.header`\n  z-index: 1100;\n  background-color: var(--bs-primary);\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 20px;\n  box-shadow: var(--bs-shadow);\n`;\n\nexport const Main = styled.main`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n`;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport Modal from 'components/Modal';\nimport { Header, Container, Main } from './App.styled';\n\nexport default class App extends Component {\n  state = {\n    searchImages: '',\n    showModal: false,\n    largeImage: {},\n  };\n\n  handleFormSubmit = searchImages => {\n    this.setState({ searchImages });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  handlerFullSizeImage = event => {\n    const { id, alt, dataset } = event.target;\n    this.setState({\n      largeImage: {\n        id,\n        alt,\n        src: dataset.full_size,\n      },\n    });\n    this.toggleModal();\n  };\n  render() {\n    const {\n      searchImages,\n      showModal,\n      largeImage: { id, src, alt },\n    } = this.state;\n    return (\n      <>\n        <Header>\n          <Container>\n            <Searchbar onSubmit={this.handleFormSubmit} />\n          </Container>\n        </Header>\n        <Container>\n          <Main>\n            <ImageGallery\n              searchImages={searchImages}\n              onClick={this.handlerFullSizeImage}\n            />\n          </Main>\n        </Container>\n        <ToastContainer autoClose={2500} />\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            {<img id={id} src={src} alt={alt} />}\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}